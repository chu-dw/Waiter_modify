// Generated by view binder compiler. Do not edit!
package com.tukorea.waiter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tukorea.waiter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRestInfoRegistrationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FragmentContainerView registMap;

  @NonNull
  public final Button registrationBtn;

  @NonNull
  public final Button searchAddress;

  @NonNull
  public final TextView storeAddress;

  @NonNull
  public final EditText storeCorpNumEdit;

  private ActivityRestInfoRegistrationBinding(@NonNull ConstraintLayout rootView,
      @NonNull FragmentContainerView registMap, @NonNull Button registrationBtn,
      @NonNull Button searchAddress, @NonNull TextView storeAddress,
      @NonNull EditText storeCorpNumEdit) {
    this.rootView = rootView;
    this.registMap = registMap;
    this.registrationBtn = registrationBtn;
    this.searchAddress = searchAddress;
    this.storeAddress = storeAddress;
    this.storeCorpNumEdit = storeCorpNumEdit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRestInfoRegistrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRestInfoRegistrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_rest_info_registration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRestInfoRegistrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.registMap;
      FragmentContainerView registMap = ViewBindings.findChildViewById(rootView, id);
      if (registMap == null) {
        break missingId;
      }

      id = R.id.registrationBtn;
      Button registrationBtn = ViewBindings.findChildViewById(rootView, id);
      if (registrationBtn == null) {
        break missingId;
      }

      id = R.id.searchAddress;
      Button searchAddress = ViewBindings.findChildViewById(rootView, id);
      if (searchAddress == null) {
        break missingId;
      }

      id = R.id.storeAddress;
      TextView storeAddress = ViewBindings.findChildViewById(rootView, id);
      if (storeAddress == null) {
        break missingId;
      }

      id = R.id.storeCorpNumEdit;
      EditText storeCorpNumEdit = ViewBindings.findChildViewById(rootView, id);
      if (storeCorpNumEdit == null) {
        break missingId;
      }

      return new ActivityRestInfoRegistrationBinding((ConstraintLayout) rootView, registMap,
          registrationBtn, searchAddress, storeAddress, storeCorpNumEdit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
